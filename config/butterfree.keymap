/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;

    behaviors {
        new_behavior: new_behavior {
            compatible = "zmk,behavior-sensor-rotate";
            label = "NEW_BEHAVIOR";
            #sensor-binding-cells = <0>;
            bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp ESC  &kp K_MUTE  &kp ESCAPE        &kp N1  &kp N2  &kp N3        &kp N4  &kp N5    &kp N6     &kp N7         &kp N8     &kp N9   &kp N0    &kp MINUS         &kp EQUAL          &kp BSPC
&kp TAB  &trans      &kp TAB           &kp Q   &kp W   &kp E         &kp R   &kp T     &kp Y      &kp U          &kp I      &kp O    &kp P     &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp BSLH
         &kp ESCAPE  &kp LEFT_CONTROL  &kp A   &kp S   &kp D         &kp F   &kp G     &kp H      &kp J          &kp K      &kp L    &kp SEMI  &kp SQT           &kp RET
         &trans      &kp LSHFT         &kp Z   &kp X   &kp C         &kp V   &kp B     &kp N      &kp M          &kp COMMA  &kp DOT  &kp FSLH  &kp RSHIFT        &kp UP
&trans   &trans      &trans                            &kp LEFT_ALT  &mo 1   &kp LGUI  &kp SPACE  &kp BACKSPACE  &mo 2                         &kp LEFT_ARROW    &kp DOWN_ARROW     &kp RIGHT_ARROW
            >;
        };

        layer_1 {
            bindings = <
&trans  &trans  &kp TILDE      &trans           &trans       &trans      &trans             &trans           &trans     &trans         &trans        &trans                &trans                 &trans            &trans             &trans
&trans  &trans  &kp RG(TILDE)  &kp EXCLAMATION  &kp AT_SIGN  &kp HASH    &kp DOLLAR         &kp PERCENT      &kp CARET  &kp AMPERSAND  &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &trans
        &trans  &trans         &kp N1           &kp N2       &kp N3      &kp N4             &kp N5           &kp N6     &kp N7         &kp N8        &kp N9                &kp N0                 &trans            &trans
        &trans  &trans         &trans           &trans       &kp K_MUTE  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp EQUAL  &kp PLUS       &kp MINUS     &kp UNDERSCORE        &kp LEFT_BRACE         &kp RIGHT_BRACE   &kp PAGE_UP
&trans  &trans  &trans                                       &trans      &trans             &trans           &trans     &trans         &trans                                                     &kp HOME          &kp PAGE_DOWN      &kp END
            >;
        };

        layer_2 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &trans  &trans  &bt BT_CLR
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans        &trans        &trans        &trans        &trans        &trans  &trans  &trans
        &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans        &trans        &trans        &trans        &trans        &trans  &trans
        &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans        &trans        &trans        &trans        &trans        &trans  &trans
&trans  &trans  &trans                  &trans  &trans  &trans  &trans        &trans        &trans                                    &trans  &trans  &trans
            >;
        };

        //                lower_layer {
        // -----------------------------------------------------------------------------------------
        // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
        // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
        // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
        //                    | GUI |     | SPC |   | ENT |     | ALT |
        //                        bindings = <
        //   &kp TAB    &kp N1       &kp N2       &kp N3       &kp N4       &kp N5         &kp N6   &kp N7   &kp N8 &kp N9    &kp N0 &kp BSPC
        //   &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &kp LEFT &kp DOWN &kp UP &kp RIGHT &trans &trans
        //   &kp LSHFT  &trans       &trans       &trans       &trans       &trans         &trans   &trans   &trans &trans    &trans &trans
        //                                    &kp LGUI     &trans       &kp SPACE      &kp RET  &trans   &kp RALT
        //                        >;
        //                };
        //                raise_layer {
        // -----------------------------------------------------------------------------------------
        // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
        // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
        // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
        //                    | GUI |     | SPC |   | ENT |     | ALT |
        //                        bindings = <
        //   &kp  TAB  &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp ASTRK &kp LPAR &kp RPAR &kp BSPC
        //   &kp LCTRL &trans   &trans &trans   &trans   &trans      &kp MINUS &kp EQUAL &kp LBKT  &kp RBKT &kp BSLH &kp GRAVE
        //   &kp LSHFT &trans   &trans &trans   &trans   &trans      &kp UNDER &kp PLUS  &kp LBRC  &kp RBRC &kp PIPE &kp TILDE
        //                             &kp LGUI &trans   &kp SPACE   &kp RET   &trans    &kp RALT
        //                        >;
        //                };
    };
};
